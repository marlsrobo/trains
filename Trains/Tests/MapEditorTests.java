import org.junit.Test;

import java.awt.*;
import java.awt.image.PixelGrabber;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import static junit.framework.TestCase.assertTrue;

/**
 * Testing that expected images match the images generated by TestUtilsPackage.MapEditorRunner
 */
public class MapEditorTests {


  /**
   * Taken from: https://www.javainuse.com/java/ImageEquals
   *
   * Creates a new visualization, saves it as an image, and compares it to the expected image that uses the same Map.
   *
   */
  @Test
  public void testExpectedImage1() throws IOException {
   // Image image = ImageIO.read(actualImageFile);
    String expectedImagePath = new File(".").getCanonicalPath() + "/Tests/MapViews/Expected/image1Test.png";
    String actualImagePath = new File(".").getCanonicalPath() + "/Tests/MapViews/Actual/image1.png";

    Image actualImage = null;
    Image expectedImage = null;

    try {
      File actualImageFile = new File(actualImagePath);
      actualImage = ImageIO.read(actualImageFile);
      File expectedImageFile = new File(expectedImagePath);
      expectedImage = ImageIO.read(expectedImageFile);
    } catch (IOException ex) {
      ex.printStackTrace();
    }

    try {
      PixelGrabber grabImage1Pixels = new PixelGrabber(actualImage, 0, 0, -1,
              -1, false);
      PixelGrabber grabImage2Pixels = new PixelGrabber(expectedImage, 0, 0, -1,
              -1, false);

      int[] image1Data = null;

      if (grabImage1Pixels.grabPixels()) {
        int width = grabImage1Pixels.getWidth();
        int height = grabImage1Pixels.getHeight();
        image1Data = new int[width * height];
        image1Data = (int[]) grabImage1Pixels.getPixels();
      }

      int[] image2Data = null;

      if (grabImage2Pixels.grabPixels()) {
        int width = grabImage2Pixels.getWidth();
        int height = grabImage2Pixels.getHeight();
        image2Data = new int[width * height];
        image2Data = (int[]) grabImage2Pixels.getPixels();
      }

      int pixelsDiff = 0;
      for (int i = 0; i < (image1Data.length - 1); i++) {
        if (image1Data[i] - image2Data[i] != 0) { pixelsDiff++; }
      }
      System.out.println("The difference in pixels from your expected image vs. your actual image is: " + pixelsDiff);
      assertTrue(pixelsDiff < 100);


    } catch (InterruptedException e1) {
      e1.printStackTrace();
    }
  }

}
